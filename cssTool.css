/**********************垂直居中 *****************************/
/* 父 div 设 position 为 relative */
.gua-slide {
    position: relative;
}

.gua-vertical-center {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
}




/*****************位移推荐 transform ***********/
/* 比 position 好用
且不影响其他元素 */
.c {
    transform: translate(20px, 40px);
}




/******************* 响应式布局 *****************************/
/*
all 是媒体类型, 代表任何设备
and 是逻辑操作
意思是, 对于任何设备, 在宽度在 200-300 的范围内应用这个样式
*/
@media all and (min-width: 200px) and (max-width: 300px) {
    body {
        background: red;
    }
}




/***************** 生成器 *********************************/
/*
animation 动画和生成器
http://cssanimate.com/
https://daneden.github.io/animate.css/


其他 css3 生成器
http://css3generator.com/
http://www.css3generator.in/
http://css3.me/
https://www.tutorialspoint.com/css/css3_boarder_image.htm
*/




/**************** 多元素 组合选择器 ************************/
/*
div, p     同时匹配
div div    匹配后代
div > p    匹配子元素
div + div  匹配同级的下一个元素(仅匹配一个)
其中 div p 与 div > p的区别
前者匹配全部的后代元素，而后者仅匹配向下一层（子元素）
*/
.b+.b {
    border-top: 1px solid black;
}

.c .b {
    transform: translate(20px, 40px);
}

.b+.b {
    /*background: red;*/
    border-top: 1px solid black;
}

.c {
    transform: translate(20px, 40px);
}




/*********** 伪元素 *******************/
/* <wujcxy></wujcxy> */
/* 语义标签 */
/*
wujcxy::first-line
wujcxy::first-letter
wujcxy::before
wujcxy::after
*/
wujcxy::after {
    content: '★';
    font-size: 32px;
    text-shadow: 1px 1px black;
}

.orange {
    color: #FF9800;
}

.gray {
    color: lightgray;
}




/*********** transition 动画 ********************/
.gua-cube {
    width: 100px;
    height: 200px;
    background: red;
}

/* 鼠标停留时 hover */
.gua-cube:hover {
    width: 200px;
    height: 100px;
    background: blue;
    transform: scale(1.2, 2);
}

/* transition: 指定 耗时 延时 */
.gua-cube {
    /* transition: 1s; */
    /* transition: background 1s 1s,height 1s 1s,width 1s 2s ease； */
    /* ease 在 chrome 会跳出 动画的时间曲线 ，然后再调整 ，animation 动画也可用 ease*/
    transition: background 1s 1s, height 1s 1s, width 1s 2s；
}




/*********************** animation 动画 ********************/
.gua-animation div {
    background: lightblue;
    margin: 10px 10px;
}

/*定义动画 changecolor, vr, 改变背景色*/
@keyframes changecolor {
    0% {
        background: lightblue;
    }

    100% {
        background: black;
    }
}

@keyframes vr {
    0% {
        transform: rotate(0deg);
    }

    50% {
        transform: rotate(230deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

/* 播放动画 1s 完成， 动画名是 changecolor */
.gua1:hover {
    animation: 1s changecolor;
}

/* 利用 play-state 属性实现动画暂停 */
.gua2 {
    animation: 1s vr infinite;
    animation-timing-function: linear;
    animation-play-state: paused;
}

.gua2:hover {
    animation-play-state: running;
}
